# Configure PCIe clocks
i2c dev 0
i2c mw 0x6c 0x26 5
i2c mw 0x6c 0x254.2 0x1e
i2c mw 0x6c 0x258.2 0x1e
i2c mw 0x20 0x3.1 0xfe

# Configure UFS clocks
i2c dev 0
i2c mw 0x6c 0x26 0x05
i2c olen 0x6c 2
i2c mw 0x6c 0x13a 0x86
i2c mw 0x6c 0x268 0x06
i2c mw 0x6c 0x269 0x00
i2c mw 0x6c 0x26a 0x3c
i2c mw 0x6c 0x26b 0x00
i2c mw 0x6c 0x26c 0x06
i2c mw 0x6c 0x26d 0x00
i2c mw 0x6c 0x26e 0x3f
i2c mw 0x6c 0x26f 0x00

# Determine configuration
if test -z "$serverip"; then
  setenv serverip 192.168.1.100
  echo WARNING: Using default server IP $serverip
  echo "        " you can override this by setting \'serverip\' variable
fi

if test -z "$ipaddr"; then
  setenv ipaddr 192.168.1.2
  echo WARNING: Using default board IP $ipaddr
  echo "        " you can override this by setting \'ipaddr\' variable
fi

if test -z "$nfs_domd_dir"; then
  setenv nfs_domd_dir "/srv/domd"
  echo WARNING: Using default NFS root directory for DomD: $nfs_domd_dir
  echo "        " you can override this by setting \'nfs_domd_dir\' variable
fi

if test -z "$nfs_domu_dir"; then
  setenv nfs_domu_dir "/srv/domu"
  echo WARNING: Using default NFS root directory for DomU: $nfs_domu_dir
  echo "        " you can override this by setting \'nfs_domu_dir\' variable
fi


# Load Images via TFTP
tftp 0x48000000 xen.dtb
tftp 0x84000000 uInitramfs
tftp 0x7a000000 Image
tftp 0x48080000 xen-uImage
tftp 0x7c000000 xenpolicy-spider

# Configure boot device in DTS
fdt addr 0x48000000
fdt resize 2048
fdt mknode / boot_dev
fdt set /boot_dev device nfs
fdt set /boot_dev my_ip $ipaddr
fdt set /boot_dev nfs_server_ip $serverip
fdt set /boot_dev nfs_dir "$nfs_domd_dir"
fdt set /boot_dev domu_nfs_dir "$nfs_domu_dir"

# Boot the board
bootm 0x48080000 0x84000000 0x48000000
